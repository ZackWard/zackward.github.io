{"version":3,"sources":["webpack:///webpack/bootstrap 568b9689ed45cff57521","webpack:///./src/index.tsx","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///./src/components/GameOfLife.tsx","webpack:///./src/components/LifeMenu.tsx","webpack:///./src/components/LifeBoard.tsx","webpack:///./src/golBoard.ts","webpack:///./src/golCell.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 568b9689ed45cff57521\n **/","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { GameOfLife } from \"./components/GameOfLife\";\r\n\r\nReactDOM.render(\r\n    <GameOfLife cols={30} rows={30} />,\r\n    document.getElementById('app')\r\n);\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.tsx\n **/","module.exports = React;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = ReactDOM;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ReactDOM\"\n ** module id = 2\n ** module chunks = 0\n **/","import * as React from \"react\";\r\n\r\nimport {LifeMenu} from \"./LifeMenu\";\r\nimport {LifeBoard} from \"./LifeBoard\";\r\nimport {golCell} from \"../golCell.ts\";\r\nimport {golBoard} from \"../golBoard\";\r\n\r\nexport interface GameOfLifeProps {\r\n    rows: number,\r\n    cols: number\r\n}\r\n\r\nexport interface GameOfLifeState {\r\n    generations: number;\r\n    playing: boolean;\r\n    board: golBoard;\r\n}\r\n\r\nexport class GameOfLife extends React.Component<GameOfLifeProps, GameOfLifeState> {\r\n\r\n    constructor(props: GameOfLifeProps) {\r\n        super(props);\r\n\r\n        // Prebind methods\r\n        this.updateBoard = this.updateBoard.bind(this);\r\n        this.clearBoard = this.clearBoard.bind(this);\r\n        this.togglePlaying = this.togglePlaying.bind(this);\r\n        this.tick = this.tick.bind(this);\r\n        \r\n        this.state = {\r\n            generations: 0,\r\n            playing: false,\r\n            board: new golBoard(this.props.cols, this.props.rows)\r\n        };\r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div id=\"game-of-life\">\r\n                <LifeMenu generations={this.state.generations} togglePlaying={this.togglePlaying} clearBoard={this.clearBoard} playing={this.state.playing} />\r\n                <LifeBoard board={this.state.board} onUpdate={this.updateBoard}></LifeBoard>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    updateBoard(board: golBoard) {\r\n        this.setState({\r\n            generations: board.generation,\r\n            playing: this.state.playing,\r\n            board: board\r\n        });\r\n    }\r\n\r\n    clearBoard() {\r\n        this.state.board.clear();\r\n        this.updateBoard(this.state.board);\r\n    }\r\n\r\n    togglePlaying() {\r\n        if (this.state.playing) {\r\n            this.setState({\r\n                generations: this.state.generations,\r\n                playing: false,\r\n                board: this.state.board\r\n            });\r\n        } else {\r\n            this.setState({\r\n                generations: this.state.generations,\r\n                playing: true,\r\n                board: this.state.board\r\n            });\r\n            // Ok, now we need to actually start the ticker\r\n            window.setTimeout(() => this.tick(), 250);\r\n        }\r\n    }\r\n\r\n    tick() {\r\n        // If the player has stopped the game, we won't proceed\r\n        if (! this.state.playing) {\r\n            return;\r\n        }\r\n        this.state.board.getNextGeneration();\r\n        this.updateBoard(this.state.board);\r\n        window.setTimeout(() => this.tick(), 250);\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/GameOfLife.tsx\n **/","import * as React from \"react\";\r\n\r\nexport interface LifeMenuProps {\r\n    generations: number;\r\n    playing: boolean;\r\n    togglePlaying: () => void;\r\n    clearBoard: () => void;\r\n}\r\n\r\nexport interface LifeMenuState {\r\n    visible: boolean;\r\n}\r\n\r\nexport class LifeMenu extends React.Component<LifeMenuProps, LifeMenuState> {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        // Set initial state\r\n        this.state = {\r\n            visible: false\r\n        };\r\n\r\n        // Bind this instance to our functions\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    render() { \r\n\r\n        let playIcon = \"fa fa-3x \" + (this.props.playing ? \"fa-pause\" : \"fa-play\");\r\n\r\n        return (\r\n            <div id=\"game-of-life-menu\" className={this.state.visible ? \"active\" : \"\"}>\r\n                <ul>\r\n                    <li>Play/Pause</li>\r\n                    <li>Clear</li>\r\n                    <li>Size</li>\r\n                    <li>Speed</li>\r\n                </ul>\r\n                <div id=\"game-of-life-menu-bottom\">\r\n                    <span>Generations: {this.props.generations}</span>\r\n                    <a href=\"#\" onClick={this.toggle}><i className=\"fa fa-chevron-down fa-3x\" aria-hidden=\"true\"></i></a>\r\n                    <a href=\"#\" onClick={() => this.props.togglePlaying()} ><i className={playIcon} aria-hidden=\"true\"></i></a>\r\n                    <a href=\"#\" onClick={() => this.props.clearBoard()}>Clear</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            visible: this.state.visible ? false : true\r\n        });\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/LifeMenu.tsx\n **/","import * as React from \"react\";\r\n\r\nimport {golCell} from \"../golCell\";\r\nimport {golBoard} from \"../golBoard\";\r\n\r\n\r\nexport interface LifeBoardProps {\r\n    board: golBoard;\r\n    onUpdate: (board: golBoard) => void\r\n}\r\n\r\nexport interface LifeBoardState {\r\n    \r\n}\r\n\r\nexport class LifeBoard extends React.Component<LifeBoardProps, LifeBoardState> {\r\n\r\n    constructor(props: LifeBoardProps) {\r\n        super(props);\r\n        this.toggleCell = this.toggleCell.bind(this);\r\n    }\r\n\r\n    render() {\r\n\r\n        let cellKey: number = 0;\r\n        let cellArray: any[] = [];\r\n\r\n        for (let y: number = 0; y < this.props.board.height; y++) {\r\n            for (let x: number = 0; x < this.props.board.width; x++) {\r\n\r\n                let thisCell = this.props.board.getCell(x, y);\r\n\r\n                let cellClasses = \"gol-cell\";\r\n                    cellClasses += thisCell.alive ? \" alive \" : \"\";\r\n                    cellClasses += (thisCell.x === 0) ? \" gol-clear \" : \"\";\r\n\r\n                cellArray.push(\r\n                    <div key={cellKey} onClick={() => {this.toggleCell(thisCell)}} className={cellClasses}></div>\r\n                );\r\n                cellKey++;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id=\"gol-board\">\r\n                {cellArray}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    toggleCell(cell: golCell) {\r\n        console.log(\"Toggle cell [\" + cell.x + \", \" + cell.y + \"]!\");\r\n        if (cell.alive) {\r\n            this.props.board.kill(cell.x, cell.y);\r\n        } else {\r\n            this.props.board.birth(cell.x, cell.y);\r\n        }\r\n\r\n        // We need to let the app know that we've updated state.\r\n        this.props.onUpdate(this.props.board);\r\n    }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/LifeBoard.tsx\n **/","import {golCell} from \"./golCell.ts\";\r\n\r\ninterface CellCollection {\r\n    [address: string]: golCell\r\n}\r\n\r\ninterface Neighbors {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport class golBoard {\r\n\r\n    public width: number;\r\n    public height: number;\r\n\r\n    public generation: number;\r\n\r\n    public neighbors: Neighbors[];\r\n\r\n    public board: CellCollection;\r\n\r\n    public livingCells: string[];\r\n\r\n    constructor(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.generation = 0;\r\n\r\n        this.board = {};\r\n        this.livingCells = [];\r\n\r\n        // This will be used to quickly check a cell's neighbors\r\n        this.neighbors = [\r\n            {\r\n                // Above\r\n                x: 0,\r\n                y: -1\r\n            },\r\n            {\r\n                // Below\r\n                x: 0,\r\n                y: 1\r\n            },\r\n            {\r\n                // Left\r\n                x: -1,\r\n                y: 0\r\n            },\r\n            {\r\n                // Right\r\n                x: 1,\r\n                y: 0\r\n            },\r\n            {\r\n                // Above Left\r\n                x: -1,\r\n                y: -1\r\n            },\r\n            {\r\n                // Above Right\r\n                x: 1,\r\n                y: -1\r\n            },\r\n            {\r\n                // Below Left\r\n                x: -1,\r\n                y: 1\r\n            },\r\n            {\r\n                // Below Right\r\n                x: 1,\r\n                y: 1\r\n            }\r\n        ]\r\n        \r\n        for (let x: number = 0; x < width; x++) {\r\n            for (let y: number = 0; y < height; y++) {\r\n                this.board[x + \"x\" + y] = new golCell(x, y);\r\n                \r\n                // We want to randomly assign life or death to a cell to build a random board pattern\r\n                if (Math.random() < 0.5) {\r\n                    this.birth(x, y);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getCell(x: number, y: number): golCell {\r\n        let address = this.getToroidalX(x) + \"x\" + this.getToroidalY(y);\r\n        return this.board[address];\r\n    }\r\n\r\n    getToroidalX(x: number): number {\r\n        let nx: number = x;\r\n        if (nx < 0) nx = this.width - 1;\r\n        if (nx >= this.width) nx = nx % this.width;\r\n        return nx;\r\n    }\r\n\r\n    getToroidalY(y: number): number {\r\n        let ny: number = y;\r\n        if (ny < 0) ny = this.height - 1;\r\n        if (ny >= this.height) ny = ny % this.height;\r\n        return ny;\r\n    }\r\n\r\n    getLivingNeighborsCount(x: number, y: number): number {\r\n        let livingNeighbors = 0;\r\n        this.neighbors.map((neighbor) => {\r\n            if (this.getCell(x + neighbor.x, y + neighbor.y).alive) livingNeighbors++;\r\n        });\r\n        return livingNeighbors;\r\n    }\r\n\r\n    kill(x: number, y:number): void {\r\n        this.getCell(x, y).alive = false;\r\n        if (this.livingCells.indexOf(x + \"x\" + y) !== -1) {\r\n            this.livingCells.splice(this.livingCells.indexOf(x + \"x\" + y), 1);\r\n        }\r\n    }\r\n\r\n    birth(x: number, y: number): void {\r\n        this.getCell(x, y).alive = true;\r\n        if (this.livingCells.indexOf(x + \"x\" + y) === -1) {\r\n            this.livingCells.push(x + \"x\" + y);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        let killList = this.livingCells.slice(0);\r\n        killList.map((cellAddress) => {\r\n            let x: number = parseInt(cellAddress.split('x')[0]);\r\n            let y: number = parseInt(cellAddress.split('x')[1]);\r\n            this.kill(x, y);\r\n        });\r\n    }\r\n\r\n    getNextGeneration() {\r\n\r\n        // First, we need to get a list of every living cell, and every cell that is adjacent to a living cell\r\n        let livingAndAdjacentList: string[] = [];\r\n\r\n        this.livingCells.map((livingCell) => {\r\n            livingAndAdjacentList.push(livingCell);\r\n            let cellAddress = livingCell.split('x');\r\n            let x = cellAddress[0];\r\n            let y = cellAddress[1];\r\n\r\n            this.neighbors.map((addressTransformation) => {\r\n                \r\n                let nx: number = this.getToroidalX(parseInt(x) + addressTransformation.x);\r\n                let ny: number = this.getToroidalY(parseInt(y) + addressTransformation.y);\r\n\r\n                if (livingAndAdjacentList.indexOf(nx + \"x\" + ny) === -1) {\r\n                    livingAndAdjacentList.push(nx + \"x\" + ny);\r\n                }\r\n            });\r\n        });\r\n\r\n        // Ok, now we have a list of every cell that might change status. Now we need to see what changes will actually occur.\r\n        // We can't actually make any changes until we evaluate every living cell and any living-adjacent cells.\r\n        let pendingChanges: string[] = [];\r\n        livingAndAdjacentList.map((cellAddress: string) => {\r\n            let cellX: number = parseInt(cellAddress.split('x')[0]);\r\n            let cellY: number = parseInt(cellAddress.split('x')[1]);\r\n\r\n            let living: boolean = this.getCell(cellX, cellY).alive;\r\n            let livingNeighbors: number = this.getLivingNeighborsCount(cellX, cellY);\r\n\r\n            if (living) {\r\n                if (livingNeighbors < 2 || livingNeighbors > 3) {\r\n                    pendingChanges.push(\"kill-\" + cellX + \"-\" + cellY);\r\n                }\r\n            } else {\r\n                if (livingNeighbors == 3) {\r\n                    pendingChanges.push(\"birth-\" + cellX + \"-\" + cellY);\r\n                }\r\n            }\r\n        });\r\n\r\n        // Now, actually make the changes\r\n        console.log(pendingChanges);\r\n        this.generation++;\r\n        \r\n        pendingChanges.map((orderString: string) => {\r\n            let order = orderString.split('-');\r\n            let command: string = order[0];\r\n            let x: number = parseInt(order[1]);\r\n            let y: number = parseInt(order[2]);\r\n\r\n            if (command === 'kill') {\r\n                console.log(\"Killing \" + x + \"-\" + y);\r\n                this.kill(x, y);\r\n            } else if (command === 'birth') {\r\n                console.log(\"Birthing \" + x + \"-\" + y);\r\n                this.birth(x, y);\r\n            } else {\r\n                console.log(\"Something went wrong\");\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/golBoard.ts\n **/","export class golCell {\r\n    x: number;\r\n    y: number;\r\n    alive: boolean;\r\n\r\n    constructor(x: number, y: number, living: boolean = false) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.alive = living;\r\n    }\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/golCell.ts\n **/"],"sourceRoot":""}